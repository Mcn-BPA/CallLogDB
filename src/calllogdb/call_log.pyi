from dataclasses import dataclass
from datetime import datetime
from typing import Literal

@dataclass(kw_only=True)
class DateParams:
    year: int = ...
    month: int = ...
    day: int = ...
    hour: int = ...
    minute: int = ...
    second: int = ...
    date: datetime

    def adjust_date(
        self, delta: int, field: Literal["year", "month", "day", "hour", "minute", "second"]
    ) -> datetime: ...

@dataclass(kw_only=True)
class RequestParams:
    date_from: datetime
    date_to: datetime
    request_detailed: str
    limit: int
    offset: int

class CallLog:
    @staticmethod
    def get_data_from_month(month: int, *, year: int = ...) -> None: ...
    @staticmethod
    def get_data_from_day(day: int, *, year: int = ..., month: int = ...) -> None: ...
    @staticmethod
    def get_data_from_hours(hour: int) -> None: ...
    @staticmethod
    def get_data_for_interval(*, date_from: datetime, date_to: datetime) -> None: ...
